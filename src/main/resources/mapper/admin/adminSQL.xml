<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="admin">
	
	<!-- Today 총 회원 -->
	<select id="todayTotalMember" resultType="_int">
		select count(*) from member
	</select>
	
	<!-- Today 가입 회원 -->
	<select id="todayJoinMember" parameterType="string" resultType="_int">
		select count(*) from member where enroll_date = #{sToday}
	</select>
	
	<!-- Today 탈퇴 회원 -->
	<select id="todayOutMember" parameterType="string" resultType="_int">
		select count(*) from delete_member where dm_date = #{sToday}
	</select>
	
	<!-- Today 총 게시물 -->
	<select id="todayTotalContent" resultType="_int">
		SELECT SUM(A+B+C+D+E) 
		FROM(SELECT
		(SELECT COUNT(*) FROM SHARE_BOARD)A, 
		(SELECT COUNT(*) FROM PROJECT)B, 
		(SELECT COUNT(*) FROM ANNOUNCEMENT)C, 
		(SELECT COUNT(*) FROM CONTEST)D, 
		(SELECT COUNT(*) FROM GOSU_NOTICE)E
		FROM DUAL)
	</select>
	
	<!-- 등급별 회원 수 -->
	<select id="bronzeCount" resultType="_int">
		select count(*) from member where member_grade BETWEEN 1 and 20
	</select>
	<select id="silverCount" resultType="_int">
		select count(*) from member where member_grade BETWEEN 21 and 40
	</select>
	<select id="goldCount" resultType="_int">
		select count(*) from member where member_grade BETWEEN 41 and 60
	</select>
	<select id="platinumCount" resultType="_int">
		select count(*) from member where member_grade BETWEEN 61 and 80
	</select>
	<select id="diamondCount" resultType="_int">
		select count(*) from member where member_grade BETWEEN 81 and 110
	</select>
	<select id="masterCount" resultType="_int">
		select count(*) from member where member_grade BETWEEN 111 and 140
	</select>
	<select id="challengerCount" resultType="_int">
		select count(*) from member where member_grade BETWEEN 141 and 170
	</select>
	
	<!-- 카테고리별 게시물 수 -->
	<select id="projectCount" resultType="_int">
		select count(*) from PROJECT
	</select>
	<select id="shareCount" resultType="_int">
		select count(*) from SHARE_BOARD
	</select>
	<select id="resumeCount" resultType="_int">
		select count(*) from ANNOUNCEMENT
	</select>
	<select id="gosuCount" resultType="_int">
		select count(*) from GOSU_NOTICE
	</select>
	<select id="contestCount" resultType="_int">
		select count(*) from CONTEST
	</select>
	
	<!-- 전체회원 조회 -->
	<select id="allMemberList" parameterType="map" resultType="m">
		select * 
		from(select rownum as rnum, m.* 
		from(
		select 
			member_no as memberNo,
			member_name as memberName,
			phone,
			member_id as memberId,
			member_pw as memberPw,
			email,
			member_type as memberType,
			enroll_date as enrollDate,
			filepath,
			member_grade as memberGrade
		from member
		<trim prefix="where">
			<if test="type == 1">
				member_type = 1
			</if>
			<if test="type == 2">
				member_type = 2
			</if>
			<if test="type == 3">
				member_type = 3
			</if>
		</trim>
		 order by #{list} desc)m order by rnum) 
		where rnum BETWEEN #{start} and #{end}
	</select>
	
	<!-- 전체회원 수 -->
	<select id="allMemberCount" parameterType="map" resultType="_int">
		select count(*) from member
		<trim prefix="where">
			<if test="type == 1">
				member_type = 1
			</if>
			<if test="type == 2">
				member_type = 2
			</if>
			<if test="type == 3">
				member_type = 3
			</if>
		</trim>
	</select>
	
	<!-- 타입별 멤버 수  -->
	<select id="totalUser" resultType="_int">
		select count(*) from member where member_type = 1
	</select>
	<select id="totalGosu" resultType="_int">
		select count(*) from member where member_type = 2
	</select>
	<select id="totalCompany" resultType="_int">
		select count(*) from member where member_type =3
	</select>
	
	<!-- 회원 등급 변경 -->
	<update id="chkChangeLevel" parameterType="map">
		update member set member_grade =
		<choose>
			<when test="grade == '브론즈'">
				10
			</when>
			<when test="grade == '실버'">
				21
			</when>
			<when test="grade == '골드'">
				41
			</when>
			<when test="grade == '플레티넘'">
				61
			</when>
			<when test="grade == '다이아'">
				81
			</when>
			<when test="grade == '마스터'">
				111
			</when>
			<when test="grade == '챌린저'">
				141
			</when>
		</choose>
		where member_id = #{id}
	</update>
	
	<select id="allReportList" parameterType="map" resultType="rp">
		select * 
		from(
			select rownum as rnum, r.* 
			from(
				select 
					report_no as reportNo,
					reporter_id as reporterId,
					report_reason as reportReason,
					report_etc as reportEtc,
					comment_no as commentNo,
					report_date as reportDate,
					report_status as reportStatus,
					comment_content as commentContent,
					enroll_date as enrollDate
				from REPORT where report_status = 1 order by REPORT_no desc)r 
			order by rnum) 
		where rnum BETWEEN #{start} and #{end}
	</select>
	
	<select id="reportCount" resultType="_int">
		select count(*) from report where report_status = 1
	</select>
	
	<select id="memberIdList" parameterType="map" resultType="string">
		select memberId from(select rownum as rnum, c.MEMBER_ID as memberId, R.REPORT_STATUS as status
		from report r 
		join COMMENTS c using(COMMENT_NO)
		where R.REPORT_STATUS = 1)
		where rnum BETWEEN #{start} and #{end}
	</select>
	
	<select id="memberReportCount" parameterType="string" resultType="_int">
		select count(id) from(select c.MEMBER_ID as id, report.REPORT_STATUS rs
		from report 
		join COMMENTS c using(COMMENT_NO))
		where id = #{id} and rs = 2
	</select>
	
	<update id="canselReport" parameterType="_int">
		update REPORT set REPORT_STATUS = 3, enroll_date = to_char(sysdate,'yyyy-mm-dd') where REPORT_NO = #{reportNo}
	</update>
	
	<update id="reportInsert" parameterType="_int">
		update REPORT set REPORT_STATUS = 2, enroll_date = to_char(sysdate,'yyyy-mm-dd')  where REPORT_NO = #{reportNo}
	</update>
	
	<update id="falseReport" parameterType="_int">
		update REPORT set REPORT_STATUS = 4, enroll_date = to_char(sysdate,'yyyy-mm-dd')  where REPORT_NO = #{reportNo}
	</update>
	
	

</mapper>







