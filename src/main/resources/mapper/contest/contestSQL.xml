<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="contest">

	<insert id="insertContest" parameterType="c">
		insert into contest values(contest_seq.nextval, #{contestHost}, #{memberId}, #{contestType}, #{contestQualify}, #{contestDate}, #{contestDeadline}, #{contestPrize}, #{phone}, #{email}, #{contestTitle}, #{contestContent}, #{contestImg}, 1, 0)
	</insert>
	
	<select id="contestAllList" resultType="c">
		select
			contest_no as contestNo,
			contest_host as contestHost,
			member_id as memberId,
			contest_type as contestType,
			contest_qualify as contestQualify,
			contest_date as contestDate,
			contest_deadline as contestDeadline,
			contest_prize as contestPrize,
			phone,
			email,
			contest_title as contestTitle,
			contest_content as contestContent,
			contest_img as contestImg,
			contest_status as contestStatus,
			contest_count as contestCount
		from contest
	</select>
	
	<select id="newContestList" resultType="c">
		select * 
		from(
			select rownum as rnum, c.* 
			from(
			select 
				contest_no as contestNo,
				contest_host as contestHost,
				member_id as memberId,
				contest_type as contestType,
				contest_qualify as contestQualify,
				contest_date as contestDate,
				contest_deadline as contestDeadline,
				contest_prize as contestPrize,
				phone,
				email,
				contest_title as contestTitle,
				contest_content as contestContent,
				contest_img as contestImg,
				contest_status as contestStatus,
				contest_count as contestCount
			 from contest order by contest_no desc)c 
			order by rnum
			) 
		where rnum BETWEEN 1 and 8
		
	</select>
	
	<select id="hotContestList" resultType="c">
		select * 
		from(
			select rownum as rnum, c.* 
			from(
			select 
				contest_no as contestNo,
				contest_host as contestHost,
				member_id as memberId,
				contest_type as contestType,
				contest_qualify as contestQualify,
				contest_date as contestDate,
				contest_deadline as contestDeadline,
				contest_prize as contestPrize,
				phone,
				email,
				contest_title as contestTitle,
				contest_content as contestContent,
				contest_img as contestImg,
				contest_status as contestStatus,
				contest_count as contestCount
			 from contest order by contest_count desc)c 
			order by rnum
			) 
		where rnum BETWEEN 1 and 4
	</select>
	
	<update id="contestCountUp" parameterType="_int">
		update contest set CONTEST_COUNT = CONTEST_COUNT+1 where contest_no = #{contestNo}
	</update>
	
	<select id="contestView" parameterType="_int" resultType="c">
		select
			contest_no as contestNo,
			contest_host as contestHost,
			member_id as memberId,
			contest_type as contestType,
			contest_qualify as contestQualify,
			contest_date as contestDate,
			contest_deadline as contestDeadline,
			contest_prize as contestPrize,
			phone,
			email,
			contest_title as contestTitle,
			contest_content as contestContent,
			contest_img as contestImg,
			contest_status as contestStatus,
			contest_count as contestCount
		from contest where contest_no = #{contestNo}
	</select>
	
	<insert id="insertContestComment" parameterType="cm">
		<choose>
			<when test="commentType == 1">
				insert into comments values(comments_seq.nextval, #{memberId}, #{commentContent}, to_char(sysdate,'yyyy-mm-dd'), #{boardNo}, #{boardType}, #{commentType}, null)	
			</when>
			<otherwise>
				insert into comments values(comments_seq.nextval, #{memberId}, #{commentContent}, to_char(sysdate,'yyyy-mm-dd'), #{boardNo}, #{boardType}, #{commentType}, #{commentRef})			
			</otherwise>
		</choose>
  		
  	</insert>
  	
  	<select id="commentList" parameterType="_int" resultType="cm">
  		select 
  			comment_no as commentNo,
  			member_id as memberId,
  			comment_content as commentContent,
  			reg_date as regDate,
  			board_no as boardNo,
  			board_type as boardType,
  			comment_type as commentType,
  			comment_ref as commentRef
  		from comments
  		where board_no = #{contestNo} and board_type = 1
  		order by comment_no
  	</select>
  	
  	<update id="updateContestComment" parameterType="cm">
  		update comments set comment_content = #{commentContent} where comment_no = #{commentNo}
  	</update>
  	
  	<delete id="deleteContestComment" parameterType="cm">
  		delete from comments where comment_no = #{commentNo}
  	</delete>
  	
  	<insert id="reportContestComment" parameterType="rp">
  		insert into report values(report_seq.nextval, #{reporterId}, #{reportReason}, #{reportEtc}, #{commentNo}, to_char(sysdate,'yyyy-mm-dd'), #{reportStatus}, #{commentContent} )
  	</insert>
  
</mapper>














