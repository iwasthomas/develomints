<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="projectTeam">

  <select id="projectList" parameterType="map" resultType="pt">
  		<![CDATA[
  		select * from (
			select rownum as rnum, a.* from
	            (select
				p.project_no as projectNo,
				p.member_no as projectWriterMemberNo,
				p.recruit_start_date as rStartDate,
				p.recruit_end_date as rEndDate,
				p.view_count as viewCount,
				p.recruit_title as rTitle,
				p.recruit_content as rContent,
				p.project_name as projectName,
				p.project_goal as projectGoal,
				p.project_reader as projectReader,
				p.project_status as projectStatus,
				p.project_start_date as pStartDate,
				p.project_end_date as pEndDate,
				(select filepath from member m where m.member_no = p.member_no) as writerImgPath,
				(select count(*) from project_dibs pd where pd.project_no = p.project_no) as dibCount,
	            (select count(*) from comments where BOARD_TYPE = 3 and BOARD_NO = p.project_no) as commentCount
			from project p 
	        order by project_No DESC) a)
			where rnum between #{start} and #{end}
		]]>
  </select>
  <select id="projectLangList" resultType="pdl">
		 select 
			use_project_lang_no as upln,
           	project_no as projectNo,
           	language_no as langNo,
           	(select language_img from develop_language d where d.language_no = u.language_no) as langImg, 
           	(select language_name from develop_language d where d.language_no = u.language_no) as langName 
		from use_project_language u
  </select>
   <select id="developLangList" resultType="ddl">
		 select 
			language_no as langNo,
           	language_name as langName,
           	language_img as langImg
		from develop_language
  </select>
  <select id="projectDefaultCount" resultType="_int">
  		<![CDATA[
		select count(*) as cnt from project
		]]>
  </select>
  
  <select id="projectCheckCount" parameterType="map" resultType="_int">
  	<choose>
  		<when test="langList == null">
  			<if test="checkValue == 1">
  				select count(*) from project
	  		</if>
	  		<if test="checkValue == 2">
	  			select count(*) from project where project_status = 1
	  		</if>
  		</when>
  		<otherwise>
  			<if test="checkValue == 1">
  				select count(*) from project where project_no in (
								(select project_no from use_project_language where language_no in
	                            (select language_no from develop_language where language_name in 
									<foreach collection="langList" item="lang" open="(" close=")" separator=",">
										#{lang}
									</foreach>
	                            )))
	  		</if>
	  		<if test="checkValue == 2">
	  			select count(*) from project where project_status = 1 and project_no in (
								(select project_no from use_project_language where language_no in
	                            (select language_no from develop_language where language_name in 
									<foreach collection="langList" item="lang" open="(" close=")" separator=",">
										#{lang}
									</foreach>
	                            )))
	  		</if>
  		</otherwise>
  	</choose>
  		
  </select>
  <select id="projectCheckList" parameterType="map" resultType="pt">
  	<choose>
  		<when test="langList == null">
  			<if test="checkValue == 1">
	  			<choose>
		  			<when test="viewValue == 1">
		  			select * from (
			  			select rownum as rnum, a.* from
				            (select
								p.project_no as projectNo,
								p.member_no as projectWriterMemberNo,
								p.recruit_start_date as rStartDate,
								p.recruit_end_date as rEndDate,
								p.view_count as viewCount,
								p.recruit_title as rTitle,
								p.recruit_content as rContent,
								p.project_name as projectName,
								p.project_goal as projectGoal,
								p.project_reader as projectReader,
								p.project_status as projectStatus,
								p.project_start_date as pStartDate,
								p.project_end_date as pEndDate,
								(select filepath from member m where m.member_no = p.member_no) as writerImgPath,
								(select count(*) from project_dibs pd where pd.project_no = p.project_no) as dibCount,
					            (select count(*) from comments where BOARD_TYPE = 3 and BOARD_NO = p.project_no) as commentCount
							from project p
			       			order by project_No DESC) a)
						where rnum between #{start} and #{end}
		  			</when>
		  			<when test="viewValue == 2">
		  			select * from (
		  				select rownum as rnum, a.* from
				            (select
								p.project_no as projectNo,
								p.member_no as projectWriterMemberNo,
								p.recruit_start_date as rStartDate,
								p.recruit_end_date as rEndDate,
								p.view_count as viewCount,
								p.recruit_title as rTitle,
								p.recruit_content as rContent,
								p.project_name as projectName,
								p.project_goal as projectGoal,
								p.project_reader as projectReader,
								p.project_status as projectStatus,
								p.project_start_date as pStartDate,
								p.project_end_date as pEndDate,
								(select filepath from member m where m.member_no = p.member_no) as writerImgPath,
								(select count(*) from project_dibs pd where pd.project_no = p.project_no) as dibCount,
					            (select count(*) from comments where BOARD_TYPE = 3 and BOARD_NO = p.project_no) as commentCount
							from project p
							order by viewCount DESC, dibCount DESC, commentCount DESC, projectNo DESC 
							) a)
						where rnum between #{start} and #{end}
			       		
					</when>
	  			</choose>
	  		</if>
	  		<if test="checkValue == 2">
	  			<choose>
		  			<when test="viewValue == 1">
		  			select * from (
			  			select rownum as rnum, a.* from
				            (select
								p.project_no as projectNo,
								p.member_no as projectWriterMemberNo,
								p.recruit_start_date as rStartDate,
								p.recruit_end_date as rEndDate,
								p.view_count as viewCount,
								p.recruit_title as rTitle,
								p.recruit_content as rContent,
								p.project_name as projectName,
								p.project_goal as projectGoal,
								p.project_reader as projectReader,
								p.project_status as projectStatus,
								p.project_start_date as pStartDate,
								p.project_end_date as pEndDate,
								(select filepath from member m where m.member_no = p.member_no) as writerImgPath,
								(select count(*) from project_dibs pd where pd.project_no = p.project_no) as dibCount,
					            (select count(*) from comments where BOARD_TYPE = 3 and BOARD_NO = p.project_no) as commentCount
							from project p
							where p.project_status = 1 
			       			order by project_No DESC) a)
						where rnum between #{start} and #{end}
		  			</when>
		  			<when test="viewValue == 2">
		  			select * from (
		  				select rownum as rnum, a.* from
				            (select
								p.project_no as projectNo,
								p.member_no as projectWriterMemberNo,
								p.recruit_start_date as rStartDate,
								p.recruit_end_date as rEndDate,
								p.view_count as viewCount,
								p.recruit_title as rTitle,
								p.recruit_content as rContent,
								p.project_name as projectName,
								p.project_goal as projectGoal,
								p.project_reader as projectReader,
								p.project_status as projectStatus,
								p.project_start_date as pStartDate,
								p.project_end_date as pEndDate,
								(select filepath from member m where m.member_no = p.member_no) as writerImgPath,
								(select count(*) from project_dibs pd where pd.project_no = p.project_no ) as dibCount,
					            (select count(*) from comments where BOARD_TYPE = 3 and BOARD_NO = p.project_no) as commentCount
							from project p
							where p.project_status = 1
							order by viewCount DESC, dibCount DESC, commentCount DESC, projectNo DESC
							) a)
						where rnum between #{start} and #{end}
					</when>
	  			</choose>
	  		</if>
  		</when>
  		<otherwise>
  			<if test="checkValue == 1">
	  			<choose>
		  			<when test="viewValue == 1">
		  			select * from (
			  			 select rownum as rnum, a.* from  
                        	(select
								p.project_no as projectNo,
								p.member_no as projectWriterMemberNo,
								p.recruit_start_date as rStartDate,
								p.recruit_end_date as rEndDate,
								p.view_count as viewCount,
								p.recruit_title as rTitle,
								p.recruit_content as rContent,
								p.project_name as projectName,
								p.project_goal as projectGoal,
								p.project_reader as projectReader,
								p.project_status as projectStatus,
								p.project_start_date as pStartDate,
								p.project_end_date as pEndDate,
								(select filepath from member m where m.member_no = p.member_no) as writerImgPath,
								(select count(*) from project_dibs pd where pd.project_no = p.project_no) as dibCount,
					            (select count(*) from comments where BOARD_TYPE = 3 and BOARD_NO = p.project_no) as commentCount
							from project p
                            where p.project_no in (
								(select project_no from use_project_language where language_no in
	                            (select language_no from develop_language where language_name in 
									<foreach collection="langList" item="lang" open="(" close=")" separator=",">
										#{lang}
									</foreach>
	                            )))
                            order by p.project_no DESC) a)
                        where rnum between #{start} and #{end}
		  			</when>
		  			<when test="viewValue == 2">
		  			select * from (
		  				select rownum as rnum, a.* from
				            (select
								p.project_no as projectNo,
								p.member_no as projectWriterMemberNo,
								p.recruit_start_date as rStartDate,
								p.recruit_end_date as rEndDate,
								p.view_count as viewCount,
								p.recruit_title as rTitle,
								p.recruit_content as rContent,
								p.project_name as projectName,
								p.project_goal as projectGoal,
								p.project_reader as projectReader,
								p.project_status as projectStatus,
								p.project_start_date as pStartDate,
								p.project_end_date as pEndDate,
								(select filepath from member m where m.member_no = p.member_no) as writerImgPath,
								(select count(*) from project_dibs pd where pd.project_no = p.project_no) as dibCount,
					            (select count(*) from comments where BOARD_TYPE = 3 and BOARD_NO = p.project_no) as commentCount
							from project p
							where p.project_no in(
								(select project_no from use_project_language where language_no in
	                            (select language_no from develop_language where language_name in 
									<foreach collection="langList" item="lang" open="(" close=")" separator=",">
										#{lang}
									</foreach>
	                            )))
	                        order by viewCount DESC, dibCount DESC, commentCount DESC, projectNo DESC
	                        ) a)
						where rnum between #{start} and #{end}
						 
					</when>
	  			</choose>
	  		</if>
	  		<if test="checkValue == 2">
	  			<choose>
		  			<when test="viewValue == 1">
		  			select * from (
			  			select rownum as rnum, a.* from
				            (select
								p.project_no as projectNo,
								p.member_no as projectWriterMemberNo,
								p.recruit_start_date as rStartDate,
								p.recruit_end_date as rEndDate,
								p.view_count as viewCount,
								p.recruit_title as rTitle,
								p.recruit_content as rContent,
								p.project_name as projectName,
								p.project_goal as projectGoal,
								p.project_reader as projectReader,
								p.project_status as projectStatus,
								p.project_start_date as pStartDate,
								p.project_end_date as pEndDate,
								(select filepath from member m where m.member_no = p.member_no) as writerImgPath,
								(select count(*) from project_dibs pd where pd.project_no = p.project_no) as dibCount,
					            (select count(*) from comments where BOARD_TYPE = 3 and BOARD_NO = p.project_no) as commentCount
							from project p
							where p.project_status = 1 and p.project_no in (
								(select project_no from use_project_language where language_no in
	                            (select language_no from develop_language where language_name in 
									<foreach collection="langList" item="lang" open="(" close=")" separator=",">
										#{lang}
									</foreach>
	                            )))
			       			order by project_No DESC) a)
						where rnum between #{start} and #{end}
		  			</when>
		  			<when test="viewValue == 2">
		  			select * from (
		  				select rownum as rnum, a.* from
				            (select
								p.project_no as projectNo,
								p.member_no as projectWriterMemberNo,
								p.recruit_start_date as rStartDate,
								p.recruit_end_date as rEndDate,
								p.view_count as viewCount,
								p.recruit_title as rTitle,
								p.recruit_content as rContent,
								p.project_name as projectName,
								p.project_goal as projectGoal,
								p.project_reader as projectReader,
								p.project_status as projectStatus,
								p.project_start_date as pStartDate,
								p.project_end_date as pEndDate,
								(select filepath from member m where m.member_no = p.member_no) as writerImgPath,
								(select count(*) from project_dibs pd where pd.project_no = p.project_no ) as dibCount,
					            (select count(*) from comments where BOARD_TYPE = 3 and BOARD_NO = p.project_no) as commentCount
							from project p
							where p.project_status = 1 and p.project_no in (
								(select project_no from use_project_language where language_no in
	                            (select language_no from develop_language where language_name in 
									<foreach collection="langList" item="lang" open="(" close=")" separator=",">
										#{lang}
									</foreach>
	                            )))
	                            order by viewCount DESC, dibCount DESC, commentCount DESC, projectNo DESC ) a)
						where rnum between #{start} and #{end}
					</when>
	  			</choose>
	  		</if>
  		</otherwise>
  	</choose>
  </select>
  
  <insert id="writeRecruitTeam" parameterType="map">
  	<choose>
  		<when test="insertLangValue == 1">
	  		insert into project values(project_seq.nextval, #{memberNo}, to_char(sysdate,'yyyy-mm-dd'), #{pt.rEndDate}, 0, #{pt.rTitle}, #{pt.rContent}, #{projectName}, #{projectGoal}, (select member_id from member where member_no = #{memberNo}), 1, null, null)
  		</when>
  		<when test="insertLangValue == 2">
  			insert into use_project_language(use_project_lang_no, project_no, language_no)
  			select up_lang_seq.nextval, A.* from (
  				<foreach collection="langList" item="lang" separator="UNION ALL ">
  					select (select project_no from project where member_no=#{memberNo} and recruit_title = #{pt.rTitle}) as project_no,
  						(select language_no from develop_language where language_name = #{lang}) as language_no
  					from dual
  				</foreach>) A
  			<!-- insert into use_project_language values
  			<foreach collection="langList" item="langLisg" index="index" separator=",">
  				(up_lang_seq.nextval, (select project_no from project where member_no=#{memberNo} and recruit_title = #{pt.rTitle}), (select language_no from develop_language where language_name = #{langLisg}))
  			</foreach> -->
  		</when>
  	</choose>
  </insert>
  
  <update id="updateReadCount" parameterType="_int">
  	update project set view_count = view_count + 1 where project_no = #{projectNo}
  </update>
  
  <select id="selectOneNotice" parameterType="map" resultType="pt">
  	select 
			p.project_no as projectNo,
			p.member_no as projectWriterMemberNo,
			p.recruit_start_date as rStartDate,
			p.recruit_end_date as rEndDate,
			p.view_count as viewCount,
			p.recruit_title as rTitle,
			p.recruit_content as rContent,
			p.project_name as projectName,
			p.project_goal as projectGoal,
			p.project_reader as projectReader,
			p.project_status as projectStatus,
			p.project_start_date as pStartDate,
			p.project_end_date as pEndDate,
			(select filepath from member m where m.member_no = p.member_no) as writerImgPath,
			(select count(*) from project_dibs pd where pd.project_no = #{projectNo}) as dibCount,
            (select count(*) from comments where BOARD_TYPE = 3 and BOARD_NO = #{projectNo}) as commentCount,
            (select member_id from member m where m.member_no = p.member_no) as projectWriterId,
            (select member_grade from member m where m.member_no = p.member_no) as projectWriterGrade,
            (select count(*) from project_dibs pd where pd.project_no = #{projectNo} and pd.member_no = #{memberNo}) as dibCountClickValue
	from project p 
	where project_no = #{projectNo}
  </select>
  
  <select id="selectCommentList" parameterType="_int" resultType="ptnc">
  	select 
  		comment_no as commentNo,
  		member_id as memberId,
  		comment_content as commentContent,
  		reg_date as regDate,
  		board_no as boardNo,
  		board_type as boardType,
  		comment_type as commentType,
  		comment_ref as commentRef
  	from comments
  	where board_no = #{projectNo} and board_type = 3
  </select>
  <update id="updateRecruitTeam" parameterType="map">
	  		update project set 
		  		recruit_end_date = #{pt.rEndDate}, 
		  		RECRUIT_TITLE = #{pt.rTitle}, 
		  		RECRUIT_CONTENT = #{pt.rContent},
		  		PROJECT_NAME = #{pt.projectName},
		  		PROJECT_GOAL = #{pt.projectGoal}
  			where project_no = #{projectNo}
  </update>
  
  <delete id="deleteLangList" parameterType="map">
  		delete from use_project_language where project_no = #{projectNo}
  </delete>
  
  <delete id="deleteOneNotice" parameterType="_int">
  		delete from project where project_no = #{projectNo}
  </delete>
</mapper>
